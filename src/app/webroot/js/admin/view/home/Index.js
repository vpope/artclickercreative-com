Ext.define('AccAdmin.view.home.Index', {
    extend: 'Ext.panel.Panel',
    border: false,
    styleHtmlContent: true,
    autoScroll: true,
    bodyPadding: '0 20 20 20',
    html: [
        '<h1>Ext.ux.Router Single Page Example</h1>',
        '<p>This app is structured with a main toolbar at the top and a target area at the center where the views are rendered',
        'one at a time.</p>',
        '<p><b>Please notice that each app might handle rendering differently.</b> This is just one way that you can use and',
        ' optimize for your own app</b></p>',
        '<p>The rendering flow is the following:</p>',
        '<ul>',
            '<li>User clicks a button on the main toolbar;<br /><br /></li>',
            '<li>Each button was given an itemId that matches a route. For example, there\'s a button with itemId: "users",',
            'and a route "users": "users#list";<br /><br /></li>',
            '<li>The Home Controller is responsible for listening these click events and redirecting the user;',
            '<br /><br /><pre>Ext.Router.redirect(btn.itemId === \'home\' ? \'\' : btn.itemId);</pre><br /></li>',
            '<li>Once redirected, the Router will find the matching route and trigger the controller action and the events',
            ' "beforedispatch" and "dispatch";<br /><br /></li>',
            '<li>In this app most of the controller actions are empty. All the rendering process is automatically handled on',
            'the "dispatch" event (check app.js). This works because views are named after each controller and action. If',
            'there\'s a controller "Users" with actions "edit" and "List", there\'ll be a view AccAdmin.users.Edit and AccAdmin.users.List.',
            '<br /><br /><pre>index: function() {\n}</pre><br />',
            '<pre>',
                'dispatch: function(token, match, params, controller) {\n',
                '    var view, viewClass, action,\n',
                '        viewport    = Ext.getCmp(\'viewport\'),\n',
                '        target      = viewport.down(\'#viewport-target\'),\n',
                '        navToolbar  = viewport.down(\'#main-nav-toolbar\');\n',
                '\n',
                '    // adjust controller and action names\n',
                '    action      = Ext.String.capitalize(match.action);\n',
                '    controller  = match.controller.charAt(0).toLowerCase() + match.controller.substr(1);\n',
                '\n',
                '    // try to get the view by controller + action names\n',
                '    viewClass   = Ext.ClassManager.get(\'AccAdmin.view.\' + controller + \'.\' + action);\n',
                '\n',
                '    if (viewClass) {\n',
                '\n',
                '        // create view\n',
                '        view = Ext.create(viewClass, {\n',
                '            border: false\n',
                '        });\n',
                '\n',
                '        // clear target and add new view\n',
                '        target.removeAll();\n',
                '        target.add(view);\n',
                '\n',
                '        // adjust top toolbar\n',
                '        if (navToolbar.child(\'#\' + controller)) {\n',
                '            navToolbar.child(\'#\' + controller).toggle(true);\n',
                '        }\n',
                '    }\n',
                '}',
            '</pre></li>',
        '</ul>'
     ]
});